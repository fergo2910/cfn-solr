{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Cloudformation template for Solr",

  "Mappings" : {
    "AWSRegion2AMI" : {
      "us-east-1" : { "redhat6d4" : "ami-a25415cb", "amazonLinux" : "ami-1ccae774" },
      "us-west-1" : { "redhat6d4" : "ami-6283a827" },
      "us-west-2" : { "redhat6d4" : "ami-b8a63b88" },
      "eu-west-1" : { "redhat6d4" : "ami-75342c01" },
      "ap-southeast-1" : { "redhat6d4" : "ami-80bbf3d2" },
      "ap-southeast-2" : { "redhat6d4" : "ami-1d62f027" },
      "ap-northeast-1" : { "redhat6d4" : "ami-5769f956" },
      "sa-east-1" : { "redhat6d4" : "ami-fd73d7e0" }
    }
  },

  "Parameters" : {
    "ZookeeperHost" : {
      "Description" : "Hostname and port for one or more zookeeper servers seperated by a comma",
      "Type" : "String"
    },

    "SolrCloudSize" : {
      "Description" : "How many EC2 instances to launch with SolrCloud",
      "Type" : "String"
    },

    "InstanceType" : {
      "Description" : "Solr Server EC2 instance type",
      "Type" : "String",
      "Default" : "m1.small",
      "AllowedValues" : [ "t1.micro","m1.small","m1.medium","m1.large","m1.xlarge","m3.xlarge","m3.2xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","c1.medium","c1.xlarge","cc1.4xlarge","cc2.8xlarge","cg1.4xlarge","hi1.4xlarge","hs1.8xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "LinuxDistro" : {
      "Description" : "Linux distribution do use. Options are redhat6d4 or amazonLinux(default).",
      "Type" : "String",
      "Default" : "amazonLinux",
      "AllowedValues" : [ "redhat6d4", "amazonLinux"],
      "ConstraintDescription" : "must be a supported linux distribution"
    },

    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the web server",
      "Type" : "String"
    }
    
  },

  "Resources" : {
    "SolrCloudSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Zookeeper and Solr requests from the world",
        "SecurityGroupIngress" : [{
          "IpProtocol" : "tcp",
          "FromPort" : "8983",
          "ToPort" : "8983",
          "CidrIp" : "0.0.0.0/0"
        }, {
          "IpProtocol" : "tcp",
          "FromPort" : "2181",
          "ToPort" : "2181",
          "CidrIp" : "0.0.0.0/0"
        }, {
         "IpProtocol" : "tcp",
         "FromPort" : "22",
         "ToPort" : "22",
         "CidrIp" : "0.0.0.0/0"
        }]
      }
    },

    "ZookeeperInstance" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : "SolrCloudSecurityGroup",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "configSets" : {
            "get_repos" : [ "yumRepo" , "installService", "config", "startService" ]
          },
          "yumRepo" : {
            "files" : {
              "/etc/yum.repos.d/cloudera-cdh4.repo" : {
                "mode" : "000644",
                "owner" : "root",
                "group" : "wheel",
                "content" : { "Fn::Join" : ["", [
                  "[cloudera-cdh4]", "\n",
                  "name=Cloudera's Distribution for Hadoop, Version 4", "\n",
                  "baseurl=http://archive.cloudera.com/cdh4/redhat/6/x86_64/cdh/4/", "\n",
                  "gpgkey = http://archive.cloudera.com/cdh4/redhat/6/x86_64/cdh/RPM-GPG-KEY-cloudera", "\n",
                  "gpgcheck = 1"
                ]]
                }
              }
            }
          },
          "installService" : {
            "packages" : {
              "yum" : {
                "zookeeper-server" : []
              }
            }
          },
          "config" : {
            "commands" : {
              "initZk" : {
                "command" : "service zookeeper-server init"
              }
            }
          },
          "startService" : {
            "services" : {
              "sysvinit" : {
                "zookeeper-server" : {
                  "enabled" : "true",
                  "ensureRunning" : "true"
                }
              }
            }
          }
        }
      },

      "Properties" : {
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegion2AMI", { "Ref" : "AWS::Region" }, { "Ref" : "LinuxDistro" } ] },
        "KeyName" : { "Ref" : "KeyName" },
        "InstanceType" : { "Ref" : "InstanceType" },
        "SecurityGroups" : [ { "Ref" : "SolrCloudSecurityGroup" } ],

        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["",[
          "#!/bin/bash","\n",
          "# redirect logging to an error file","\n",
          "exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1","\n",
          "# add the puppet repository to yum", "\n",
          "rpm -ivh http://yum.puppetlabs.com/el/6/products/i386/puppetlabs-release-6-7.noarch.rpm", "\n",
          "yum install python-setuptools","\n",
          "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz","\n",
          "## Initialize CloudFormation bits","\n",
          "cfn-init -c get_repos -v -s ", { "Ref" : "AWS::StackName" }, " -r ZookeeperInstance",
          "   --region ", { "Ref" : "AWS::Region" }, " >> /tmp/cfn-init.log 2>&1 || error_exit $(</tmp/cfn-init.log)","\n",
          "cfn-signal -s true \"", {"Ref" : "WaitForZkHandle"}, "\"\n"
        ]
        ]
        }},
        "Tags" : [ {
          "Key" : "Name",
          "Value" :  { "Fn::Join" : [ "", [{ "Ref" : "AWS::StackName"} , "-zk"]] },
          "PropagateAtLaunch" : true
        }] 
      }
    },

    "WaitForZkHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

    "WaitForZk" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "ZookeeperInstance",
      "Properties" : {
        "Handle" : {"Ref" : "WaitForZkHandle"},
        "Timeout" : "600"
      }
    },

    "SolrCloudGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "DependsOn" : [ "WaitForZkHandle", "SolrCloudSecurityGroup" ],
      "Properties" : {
        "LaunchConfigurationName" : { "Ref" : "SolrCloudLaunchConfig" },
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "MinSize" : { "Ref" : "SolrCloudSize" },
        "MaxSize" : { "Ref" : "SolrCloudSize" },
        "Tags" : [ {
          "Key" : "Name",
          "Value" :  { "Fn::Join" : [ "", [{ "Ref" : "AWS::StackName"} , "-sc"]] },
          "PropagateAtLaunch" : true
        }
        ]
      }
    },

    "SolrCloudLaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration", 
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "packages" : {
              "yum" : {
                "rubygems" : [],
                "puppet" : []
              }
            },
            "sources" : {
              "/etc/puppet/modules/solr" : "https://github.com/o19s/puppet-solr/tarball/master"
            },
            "files" : {
              "/etc/puppet/base.pp" : {
                "mode" : "000644",
                "owner" : "root",
                "group" : "wheel",
                "content" : { "Fn::Join" : ["", [
                  "service { \"iptables\":", "\n",
                  "  ensure => stopped", "\n",
                  "}", "\n",
                  "", "\n",
                  "class { \"solr::jetty\":", "\n",
                  "  zookeeper_hosts => \"", { "Fn::GetAtt" : ["ZookeeperInstance", "PrivateDnsName"] }, ":2181\"", "\n",
                  "}"
                ]]
                }
              }
            }
          }
        }
      },

      "Properties" : {
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegion2AMI", { "Ref" : "AWS::Region" }, { "Ref" : "LinuxDistro" } ] },
        "KeyName" : { "Ref" : "KeyName" },
        "InstanceType" : { "Ref" : "InstanceType" },
        "SecurityGroups" : [ { "Ref" : "SolrCloudSecurityGroup" } ],
        "BlockDeviceMappings" : [
          {
          "DeviceName" : "/dev/sda1",
          "Ebs" : { "VolumeSize" : "50" } 
        }
        ],

        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["",[
          "#!/bin/bash","\n",
          "# redirect logging to an error file","\n",
          "exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1","\n",
          "# add the puppet repository to yum", "\n",
          "rpm -ivh http://yum.puppetlabs.com/el/6/products/i386/puppetlabs-release-6-7.noarch.rpm", "\n",
          "yum install python-setuptools","\n",
          "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz","\n",
          "## Initialize CloudFormation bits","\n",
          "cfn-init -v -s ", { "Ref" : "AWS::StackName" }, " -r SolrCloudLaunchConfig",
          "   --region ", { "Ref" : "AWS::Region" }, " >> /tmp/cfn-init.log 2>&1 || error_exit $(</tmp/cfn-init.log)","\n",
          "puppet apply /etc/puppet/base.pp", "\n",
          "cfn-signal -s true \"", {"Ref" : "WaitForInstanceWaitHandle"}, "\"\n"
        ]
        ]
        }}
      }
    },

    "WaitForInstanceWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle",
      "Properties" : {
      }
    },

    "WaitForInstance" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "SolrCloudGroup",
      "Properties" : {
        "Count" :  { "Ref" : "SolrCloudSize" },
        "Handle" : {"Ref" : "WaitForInstanceWaitHandle"},
        "Timeout" : "600"
      }
    }
  }

}
