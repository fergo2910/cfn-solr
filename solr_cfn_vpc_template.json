{ 
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Cloudformation template for Solr",

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro" : { "Arch" : "64" },
      "m1.small" : { "Arch" : "64" },
      "m1.medium" : { "Arch" : "64" },
      "m1.large" : { "Arch" : "64" },
      "m1.xlarge" : { "Arch" : "64" },
      "m2.xlarge" : { "Arch" : "64" },
      "m2.2xlarge" : { "Arch" : "64" },
      "m2.4xlarge" : { "Arch" : "64" },
      "m3.xlarge" : { "Arch" : "64" },
      "m3.2xlarge" : { "Arch" : "64" },
      "c1.medium" : { "Arch" : "64" },
      "c1.xlarge" : { "Arch" : "64" }
    },

    "AWSRegionArch2AMI" : {
      "us-east-1" : { "64" : "ami-7e175617" }
    }
  },

  "Parameters" : {
    "ZookeeperHost" : {
      "Description" : "Hostname and port for one or more zookeeper servers seperated by a comma",
      "Type" : "String"
    },

    "CloudShards" : {
      "Description" : "How many shards should be created with the data for Solr Cloud",
      "Type" : "String",
      "Default" : "1"
    },

    "SolrCloudSize" : {
      "Description" : "How many EC2 instances to launch with SolrCloud",
      "Type" : "String"
    },

    "InstanceType" : {
      "Description" : "Solr Server EC2 instance type",
      "Type" : "String",
      "Default" : "m1.small",
      "AllowedValues" : [ "t1.micro","m1.small","m1.medium","m1.large","m1.xlarge","m3.xlarge","m3.2xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","c1.medium","c1.xlarge","cc1.4xlarge","cc2.8xlarge","cg1.4xlarge","hi1.4xlarge","hs1.8xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "AZs":
      {
      "Description":
        "The list of AvailabilityZones for your Virtual Private Cloud (VPC)",
      "Type":
        "CommaDelimitedList"
    },

    "Subnets":
      {
      "Description":
        "The list of SubnetIds in your Virtual Private Cloud (VPC)",
      "Type":
        "CommaDelimitedList"
    },


    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the web server",
      "Type" : "String"
    },

    "SecurityGroup" : {
      "Description" : "Name of an existing EC2 security group which allows communication between solr instances (usually TCP port 8983)",
      "Type" : "String"
    },

    "PuppetSolrModuleURI" : {
      "Description" : "[OPTIONAL] A url pointing to a zip or tar file containing the solr module for puppet",
      "Type" : "String",
      "Default" : "https://github.com/o19s/puppet-solr/tarball/master"
    }
  },

  "Resources" : {
    "SolrCloudGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones": { "Ref" : "AZs" },
        "VPCZoneIdentifier": { "Ref": "Subnets" },
        "LaunchConfigurationName" : { "Ref" : "SolrCloudLaunchConfig" },
        "MinSize" : { "Ref" : "SolrCloudSize" },
        "MaxSize" : { "Ref" : "SolrCloudSize" },
        "Tags" : [ {
          "Key" : "Name",
          "Value" :  { "Fn::Join" : [ "", [{ "Ref" : "AWS::StackName"} , "-solr"]] },
          "PropagateAtLaunch" : true
        }
        ]
      }
    },

    "SolrCloudLaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration", 
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "packages" : {
              "yum" : {
                "rubygems" : [],
                "puppet" : []
              }
            },
            "sources" : {
              "/etc/puppet/modules/solr" : { "Ref" : "PuppetSolrModuleURI" }
            },
            "files" : {
              "/etc/puppet/base.pp" : {
                "mode" : "000644",
                "owner" : "root",
                "group" : "wheel",
                "content" : { "Fn::Join" : ["", [
                  "service { \"iptables\":", "\n",
                  "  ensure => stopped", "\n",
                  "}", "\n",
                  "", "\n",
                  "class { \"solr::tomcat6\":", "\n",
                  "  zookeeper_hosts => \"", { "Ref" : "ZookeeperHost" }, "\", ", "\n",
                  "  cloud_shards => ", { "Ref" : "CloudShards" }, "\n",
                  "}"
                ]]
                }
              }
            }
          }
        }
      },

      "Properties" : {
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" }, 
          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
          "KeyName" : { "Ref" : "KeyName" },
          "InstanceType" : { "Ref" : "InstanceType" },
          "SecurityGroups" : [ { "Ref" : "SecurityGroup" } ],
          "BlockDeviceMappings" : [
            {
            "DeviceName" : "/dev/sda1",
            "Ebs" : { "VolumeSize" : "50" } 
          }
          ],

          "UserData" : { "Fn::Base64" : { "Fn::Join" : ["",[
            "#!/bin/bash","\n",
            "# redirect logging to an error file","\n",
            "exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1","\n",
            "# add the puppet repository to yum", "\n",
            "rpm -ivh http://yum.puppetlabs.com/el/6/products/i386/puppetlabs-release-6-7.noarch.rpm", "\n",
            "yum install python-setuptools","\n",
            "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz","\n",
            "## Initialize CloudFormation bits","\n",
            "cfn-init -v -s ", { "Ref" : "AWS::StackName" }, " -r SolrCloudLaunchConfig",
            "   --region ", { "Ref" : "AWS::Region" }, " >> /tmp/cfn-init.log 2>&1 || error_exit $(</tmp/cfn-init.log)","\n",
            "puppet apply /etc/puppet/base.pp", "\n",
            "cfn-signal -s true \"", {"Ref" : "WaitForInstanceWaitHandle"}, "\"\n"
          ]
          ]
          }}
      }
    },

    "WaitForInstanceWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle",
      "Properties" : {
      }
    },

    "WaitForInstance" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "SolrCloudGroup",
      "Properties" : {
        "Count" :  { "Ref" : "SolrCloudSize" },
        "Handle" : {"Ref" : "WaitForInstanceWaitHandle"},
        "Timeout" : "600"
      }
    }
  }

}
